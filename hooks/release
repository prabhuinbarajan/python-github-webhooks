#!/usr/bin/env python
# Python Example for Python GitHub Webhooks
# File: push-myrepo-master

import sys
import json
import requests
with open(sys.argv[1], 'r') as jsf:
	payload = json.loads(jsf.read())

### Do something with the payloadx	
name = payload['repository']['name']
full_name = payload['repository']['full_name']
giturl = payload['repository']['clone_url']
tag =  payload['release']['tag_name']
host=sys.argv[3]
#commit = ""
qube_secret_key=sys.argv[4]
qube_url=sys.argv[5]
qube_proj_id=sys.argv[6]
qube_tenant_id=sys.argv[7]
qube_tenant_urlprefix=sys.argv[8]
print "git release repo %s url %s tag %s" % (name , giturl, tag)
task = { "repo": name, "full_name": full_name, "giturl": giturl, "tag": tag, "event": "release", "qube_proj_id": qube_proj_id, "qube_tenant_id": qube_tenant_id, "qube_tenant_urlprefix": qube_tenant_urlprefix};
resp = requests.post(qube_url + '/qubeship_ci_git?st2-api-key='+qube_secret_key, data=json.dumps(task),headers={'Content-Type':'application/json'}, verify=False) #, 'X-Auth-Token': secret_key})
if resp.status_code/100 != 2:
    raise Exception('POST /v1/webhooks/sample {}'.format(resp.status_code))
#task = {"repo": name , "giturl": giturl, "branch": branch , "commit":commit };
#resp = requests.post('http://'+host + '/v1/webhooks/sample?st2-api-key='+st2_secret_key, data=json.dumps(task),headers={'Content-Type':'application/json'}) #, 'X-Auth-Token': secret_key})
#if resp.status_code/100 != 2:
#    raise Exception('POST /v1/webhooks/sample {}'.format(resp.status_code))



outfile = '/tmp/hook1-{}.log'.format(name)

with open(outfile, 'a') as f:
	f.write("git release repo %s full_name %s url %s tag %s host %s qube_proj_id %s qube_tenant_id %s qube_tenant_dns_prefix %s\n" % (name, full_name, giturl, tag, host, qube_proj_id, qube_tenant_id, qube_tenant_dns_prefix))