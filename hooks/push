#!/usr/bin/env python
# Python Example for Python GitHub Webhooks
# File: push-myrepo-master

import sys
import json
import requests
from jenkins.config import QubeConfig

with open(sys.argv[1], 'r') as jsf:
    payload = json.loads(jsf.read())

name = payload['repository']['name']
full_name = payload['repository']['full_name']
giturl = payload['repository']['url']
branch = payload['ref']
commit = payload["after"]
host = sys.argv[3]
qube_secret_key = sys.argv[4]
qube_url = sys.argv[5]
qube_proj_id = sys.argv[6]
qube_tenant_id = sys.argv[7]
qube_tenant_dns_prefix = sys.argv[8]
qube_org_id = sys.argv[9]

if not qube_tenant_dns_prefix:
    qube_tenant_dns_prefix = ''

print("git push  repo %s url %s branch %s commit %s qube_proj_id %s"
       % (name, giturl, branch , commit, qube_proj_id))

task = {
  "repo": name, 
  "full_name": full_name, 
  "giturl": giturl, 
  "branch": branch,
  "commit": commit, 
  "event": "push",
  "qube_proj_id": qube_proj_id, 
  "qube_tenant_id": qube_tenant_id, 
  "qube_tenant_dns_prefix": qube_tenant_dns_prefix,
  "qube_org_id": qube_org_id
}
print(json.dumps(task))

config = QubeConfig()
jenkinsJob = config.server.get_job(qube_proj_id)

parameters_dict = {
  'commithash': commit
}
qi = jenkinsJob.invoke(build_params=parameters_dict, cause="git trigger",
                       block=False)
qi.block_until_building()
ite_id = qi.get_build_number()

outfile = '/tmp/hook-{}.log'.format(name)
with open(outfile, 'a') as f:
    f.write("git push  repo %s full_name %s url %s branch %s commit %s host "
            "%s qube_proj_id %s qube_tenant_id %s "
            "qube_tenant_dns_prefix %s qube_org_id %s iteration_id %s\n" %
            (name, full_name, giturl, branch , commit, host, qube_proj_id,
             qube_tenant_id, qube_tenant_dns_prefix, qube_org_id, ite_id))

